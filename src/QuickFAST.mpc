project(*) : boost_base {
  sharedname = QuickFAST
  dynamicflags += QUICKFAST_BUILD_DLL
  includes += $(QUICKFAST_ROOT)/src
  includes += $(XERCES_INCLUDE)
  libpaths += $(XERCES_LIBPATH)
  libs += $(XERCES_LIBNAME)
  pch_header = Common/QuickFASTPch.h
  pch_source = Common/QuickFASTPch.cpp
  Source_Files {
    Common
    Codecs
    Messages
    Application
  }
  Header_Files {
    Common
    Codecs
    Messages
    Application
  }

  specific(!vc8, !vc9) {
    libout = $(QUICKFAST_ROOT)/lib
  }
  specific(vc8, vc9) {
    Release::libout = $(QUICKFAST_ROOT)/Output/Release
    Debug::libout = $(QUICKFAST_ROOT)/Output/Debug
  }
  specific(make) {
    // Enable full optimization on gcc/linux
    Release::genflags += -O3
  }
  specific(vc8) { // vc9 doesn't need this
    macros += _WIN32_WINNT=0x0501
  }
}

project(*tests) : boost_unit_test_framework, boost_filesystem, boost_system, boost_thread {
  exename = QuickFASTTest
  includes += $(QUICKFAST_ROOT)/src
  specific(!vc8, !vc9) {
    libpaths += $(QUICKFAST_ROOT)/lib
    exeout = $(QUICKFAST_ROOT)/bin
  }
  specific(vc8, vc9) {
    Release::exeout = $(QUICKFAST_ROOT)/Output/Release
    Debug::exeout = $(QUICKFAST_ROOT)/Output/Debug
    Release::libpaths += $(QUICKFAST_ROOT)/Output/Release
    Debug::libpaths += $(QUICKFAST_ROOT)/Output/Debug
  }
  specific(vc8) { // vc9 doesn't need this
    macros += _WIN32_WINNT=0x0501
  }

  libpaths += $(XERCES_LIBPATH)
  libs += QuickFAST
  libs += $(XERCES_LIBNAME)
  after += QuickFAST
  macros += BOOST_TEST_DYN_LINK
  pch_header = Common/QuickFASTPch.h
  pch_source = Common/QuickFASTPch.cpp
  Source_Files {
    Tests
  }
  Header_Files {
    Tests
  }
}

